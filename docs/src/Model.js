// Generated by CoffeeScript 2.7.0
(function() {
  if (!this.Maslosoft) {
    this.Maslosoft = {};
  }

  if (!this.Maslosoft.Ko) {
    this.Maslosoft.Ko = {};
  }

  if (!this.Maslosoft.Koe) {
    this.Maslosoft.Koe = {};
  }

  if (!this.Maslosoft.BinderDev) {
    this.Maslosoft.BinderDev = {};
  }

  if (!this.Maslosoft.BinderDev.Models) {
    this.Maslosoft.BinderDev.Models = {};
  }

  if (!this.Maslosoft.BinderDev.Widgets) {
    this.Maslosoft.BinderDev.Widgets = {};
  }

  this.Maslosoft.BinderDev.FancyTreeDropHandler = class FancyTreeDropHandler {
    constructor(node, data) {
      this.getNode = this.getNode.bind(this);
    }

    getNode(node) {
      console.log("Transform node...");
      console.log(node);
      return node;
    }

  };

  this.Maslosoft.Koe.TreeItem = (function() {
    class TreeItem extends this.Maslosoft.Binder.Model {
      constructor(data = null) {
        super(data);
        this.id = TreeItem.idCounter++;
      }

    };

    TreeItem.idCounter = 0;

    TreeItem.prototype._class = "Maslosoft.Koe.TreeItem";

    TreeItem.prototype.id = 0;

    TreeItem.prototype.title = '';

    TreeItem.prototype.description = '';

    TreeItem.prototype.children = [];

    return TreeItem;

  }).call(this);

  this.Maslosoft.Koe.Intro = (function() {
    class Intro extends this.Maslosoft.Binder.Model {};

    Intro.prototype._class = "Maslosoft.Koe.Intro";

    Intro.prototype.text = '';

    return Intro;

  }).call(this);

  this.Maslosoft.Koe.FileSizeFormatter = (function() {
    class FileSizeFormatter extends this.Maslosoft.Binder.Model {};

    FileSizeFormatter.prototype._class = "Maslosoft.Koe.FileSizeFormatter";

    FileSizeFormatter.prototype.size = 0;

    return FileSizeFormatter;

  }).call(this);

  this.Maslosoft.Koe.DecimalFormatter = (function() {
    class DecimalFormatter extends this.Maslosoft.Binder.Model {};

    DecimalFormatter.prototype._class = "Maslosoft.Koe.DecimalFormatter";

    DecimalFormatter.prototype.value = 0;

    return DecimalFormatter;

  }).call(this);

  this.Maslosoft.Koe.Href = (function() {
    class Href extends this.Maslosoft.Binder.Model {};

    Href.prototype._class = "Maslosoft.Koe.Href";

    Href.prototype.filename = '';

    return Href;

  }).call(this);

  this.Maslosoft.Koe.Src = (function() {
    class Src extends this.Maslosoft.Binder.Model {};

    Src.prototype._class = "Maslosoft.Koe.Src";

    Src.prototype.filename = '';

    return Src;

  }).call(this);

  this.Maslosoft.Koe.HtmlValue = (function() {
    class HtmlValue extends this.Maslosoft.Binder.Model {};

    HtmlValue.prototype._class = "Maslosoft.Koe.HtmlValue";

    HtmlValue.prototype.text = '';

    return HtmlValue;

  }).call(this);

  this.Maslosoft.Koe.TextValue = (function() {
    class TextValue extends this.Maslosoft.Binder.Model {};

    TextValue.prototype._class = "Maslosoft.Koe.TextValue";

    TextValue.prototype.text = '';

    return TextValue;

  }).call(this);

  this.Maslosoft.Koe.SortableHtmlValues = (function() {
    class SortableHtmlValues extends this.Maslosoft.Binder.Model {};

    SortableHtmlValues.prototype._class = "Maslosoft.Koe.SortableHtmlValues";

    SortableHtmlValues.prototype.title = '';

    SortableHtmlValues.prototype.items = [];

    return SortableHtmlValues;

  }).call(this);

  this.Maslosoft.Koe.Selected = (function() {
    class Selected extends this.Maslosoft.Binder.Model {};

    Selected.prototype._class = "Maslosoft.Koe.Selected";

    Selected.prototype.isSelected = false;

    return Selected;

  }).call(this);

  this.Maslosoft.Koe.Enum = (function() {
    class Enum extends this.Maslosoft.Binder.Model {};

    Enum.prototype._class = "Maslosoft.Koe.Enum";

    Enum.prototype.status = 0;

    return Enum;

  }).call(this);

  this.Maslosoft.Koe.Hidden = (function() {
    class Hidden extends this.Maslosoft.Binder.Model {};

    Hidden.prototype._class = "Maslosoft.Koe.Hidden";

    Hidden.prototype.show = true;

    return Hidden;

  }).call(this);

  this.Maslosoft.Koe.Icon = (function() {
    class Icon extends this.Maslosoft.Binder.Model {};

    Icon.prototype._class = "Maslosoft.Koe.Icon";

    Icon.prototype.icon = '';

    Icon.prototype.isImage = true;

    Icon.prototype.iconSize = 64;

    Icon.prototype.filename = '';

    Icon.prototype.updateDate = {
      sec: 21232323
    };

    return Icon;

  }).call(this);

  this.Maslosoft.Koe.Id = (function() {
    class Id extends this.Maslosoft.Binder.Model {};

    Id.prototype._class = "Maslosoft.Koe.Id";

    Id.prototype.id = '';

    return Id;

  }).call(this);

  this.Maslosoft.Koe.Tooltip = (function() {
    class Tooltip extends this.Maslosoft.Binder.Model {};

    Tooltip.prototype._class = "Maslosoft.Koe.Tooltip";

    Tooltip.prototype.title = '';

    return Tooltip;

  }).call(this);

  this.Maslosoft.Koe.Asset = (function() {
    class Asset extends this.Maslosoft.Binder.Model {};

    Asset.prototype._class = "Maslosoft.Koe.Asset";

    Asset.prototype.url = '';

    Asset.prototype.updateDate = {
      sec: 21232323
    };

    return Asset;

  }).call(this);

  this.Maslosoft.Koe.DateTime = (function() {
    class DateTime extends this.Maslosoft.Binder.Model {};

    DateTime.prototype._class = "Maslosoft.Koe.DateTime";

    DateTime.prototype.url = '';

    DateTime.prototype.date = 21232323;

    return DateTime;

  }).call(this);

  this.Maslosoft.Koe.Nested = (function() {
    class Nested extends this.Maslosoft.Binder.Model {};

    Nested.prototype._class = "Maslosoft.Koe.Nested";

    Nested.prototype.rawI18N = '';

    return Nested;

  }).call(this);

  this.Maslosoft.Koe.Video = (function() {
    class Video extends this.Maslosoft.Binder.Model {};

    Video.prototype._class = "Maslosoft.Koe.Video";

    Video.prototype.url = '';

    Video.prototype.title = '';

    return Video;

  }).call(this);

  this.Maslosoft.Koe.Videos = (function() {
    class Videos extends this.Maslosoft.Binder.Model {};

    Videos.prototype._class = "Maslosoft.Koe.Video";

    Videos.prototype.videos = [];

    return Videos;

  }).call(this);

  this.Maslosoft.Koe.DatePicker = (function() {
    class DatePicker extends this.Maslosoft.Binder.Model {};

    DatePicker.prototype._class = "Maslosoft.Koe.DatePicker";

    DatePicker.prototype.date = 1473839950;

    return DatePicker;

  }).call(this);

  this.Maslosoft.Koe.AclUser = (function() {
    class AclUser extends this.Maslosoft.Binder.Model {};

    AclUser.prototype._class = "Maslosoft.Koe.AclUser";

    AclUser.prototype.isGuest = true;

    return AclUser;

  }).call(this);

  this.Maslosoft.Koe.Options = (function() {
    class Options extends this.Maslosoft.Binder.Model {
      constructor(data = null) {
        super(data);
      }

    };

    Options.prototype._class = "Maslosoft.Koe.Options";

    Options.prototype.selected = null;

    return Options;

  }).call(this);

  this.Maslosoft.BinderDev.Widgets.MyWidget = (function() {
    var i, originalTitle;

    class MyWidget {
      constructor() {
        this.init = this.init.bind(this);
        this.dispose = this.dispose.bind(this);
        this.log = this.log.bind(this);
        this.log("Create");
      }

      init(element) {
        if (!originalTitle) {
          originalTitle = this.title;
        }
        this.title = `${originalTitle} #${i}`;
        element.innerHTML = this.title;
        return this.log("Init");
      }

      dispose(element) {
        return this.log("Dispose");
      }

      log(message) {
        i++;
        return jQuery('#widgetLog').append(`<div>${i}. ${message}</div>`);
      }

    };

    i = 0;

    originalTitle = '';

    MyWidget.prototype.title = '';

    return MyWidget;

  }).call(this);

  this.Maslosoft.Koe.Columns = (function() {
    class Columns extends this.Maslosoft.Binder.Model {};

    
    // @var Maslosoft.Koe.UiColumns

    Columns.prototype.columns = null;

    
    // @var Maslosoft.Koe.UiColumns

    Columns.prototype.sizes = null;

    return Columns;

  }).call(this);

  this.Maslosoft.Koe.UiColumns = (function() {
    class UiColumns extends this.Maslosoft.Binder.Model {};

    
    // On HD displays

    // @var integer

    UiColumns.prototype.lg = 4;

    
    // On laptops

    // @var integer

    UiColumns.prototype.md = 4;

    
    // On tablets

    // @var integer

    UiColumns.prototype.sm = 2;

    
    // On small mobile

    // @var integer

    UiColumns.prototype.xs = 2;

    return UiColumns;

  }).call(this);

  this.Maslosoft.BinderDev.Widgets.MyOtherWidget = (function() {
    var i, originalTitle;

    class MyOtherWidget {
      constructor() {
        this.init = this.init.bind(this);
        this.dispose = this.dispose.bind(this);
        this.log = this.log.bind(this);
        this.log("Create other");
      }

      init(element) {
        if (!originalTitle) {
          originalTitle = this.title;
        }
        if (i > 1) {
          this.title = `${originalTitle} #${i}`;
        }
        element.innerHTML = this.title;
        return this.log("Init other");
      }

      dispose(element) {
        return this.log("Dispose other");
      }

      log(message) {
        i++;
        return jQuery('#widgetLog2').append(`<div>${i}. ${message}</div>`);
      }

    };

    i = 0;

    originalTitle = '';

    MyOtherWidget.prototype.title = '';

    return MyOtherWidget;

  }).call(this);

  this.Maslosoft.Koe.CssClasses = (function() {
    class CssClasses extends this.Maslosoft.Binder.Model {};

    CssClasses.prototype._class = "Maslosoft.Koe.CssClasses";

    CssClasses.prototype.classes = [];

    CssClasses.prototype.classList = '';

    return CssClasses;

  }).call(this);

  this.Maslosoft.Koe.Smileys = (function() {
    class Smileys {
      constructor() {
        this.getModelValue = this.getModelValue.bind(this);
        this.getElementValue = this.getElementValue.bind(this);
      }

      getModelValue(element, value) {
        var el, image, j, len, ref, ref1, selector, smiley, val;
        if (!this.enabled) {
          return value;
        }
        // Convert images back to smileys
        val = jQuery(`<div>${value}</div>`);
        ref = Smileys.smileys;
        for (smiley in ref) {
          image = ref[smiley];
          selector = `[data-smiley='${smiley}']`;
          ref1 = val.find(selector);
          //console.log selector
          for (j = 0, len = ref1.length; j < len; j++) {
            el = ref1[j];
            jQuery(el).replaceWith(smiley);
          }
        }
        value = val.html();
        return value;
      }

      getElementValue(element, value) {
        var image, re, ref, smiley;
        if (!this.enabled) {
          return value;
        }
        ref = Smileys.smileys;
        // Update will cause caret jumping
        // in htmlValue binding. For this plugin this could suffice...
        // see for selection save restore: http://jsfiddle.net/Y8pJ7/8/
        for (smiley in ref) {
          image = ref[smiley];
          re = new RegExp(Maslosoft.Ko.escapeRegExp(smiley), 'g');
          value = value.replace(re, `<img src='${Smileys.dir}/${image}' data-smiley='${smiley}'/>`);
        }
        return value;
      }

    };

    Smileys.prototype.enabled = true;

    Smileys.smileys = {
      ':)': 'smiley.png',
      ':(': 'smiley-sad.png',
      '8)': 'smiley-cool.png'
    };

    Smileys.dir = '../src/images';

    return Smileys;

  }).call(this);

  this.Maslosoft.Koe.Map = (function() {
    class Map {};

    Map.prototype.lat = 0;

    Map.prototype.lng = 0;

    Map.prototype.zoom = 10;

    Map.prototype.type = 'roadmap';

    Map.prototype.markers = null;

    return Map;

  }).call(this);

}).call(this);

//# sourceMappingURL=Model.js.map
