// Generated by CoffeeScript 1.12.8
(function() {
  var bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  if (!this.Maslosoft) {
    this.Maslosoft = {};
  }

  if (!this.Maslosoft.Ko) {
    this.Maslosoft.Ko = {};
  }

  if (!this.Maslosoft.Koe) {
    this.Maslosoft.Koe = {};
  }

  if (!this.Maslosoft.BinderDev) {
    this.Maslosoft.BinderDev = {};
  }

  if (!this.Maslosoft.BinderDev.Models) {
    this.Maslosoft.BinderDev.Models = {};
  }

  if (!this.Maslosoft.BinderDev.Widgets) {
    this.Maslosoft.BinderDev.Widgets = {};
  }

  this.Maslosoft.BinderDev.FancyTreeDropHandler = (function() {
    function FancyTreeDropHandler(node, data) {
      this.getNode = bind(this.getNode, this);
    }

    FancyTreeDropHandler.prototype.getNode = function(node) {
      console.log("Transform node...");
      console.log(node);
      return node;
    };

    return FancyTreeDropHandler;

  })();

  this.Maslosoft.Koe.TreeItem = (function(superClass) {
    extend(TreeItem, superClass);

    TreeItem.idCounter = 0;

    TreeItem.prototype._class = "Maslosoft.Koe.TreeItem";

    TreeItem.prototype.id = 0;

    TreeItem.prototype.title = '';

    TreeItem.prototype.description = '';

    TreeItem.prototype.children = null;

    function TreeItem(data) {
      if (data == null) {
        data = null;
      }
      this.children = [];
      TreeItem.__super__.constructor.call(this, data);
      this.id = TreeItem.idCounter++;
    }

    return TreeItem;

  })(this.Maslosoft.Binder.Model);

  this.Maslosoft.Koe.Intro = (function(superClass) {
    extend(Intro, superClass);

    function Intro() {
      return Intro.__super__.constructor.apply(this, arguments);
    }

    Intro.prototype._class = "Maslosoft.Koe.Intro";

    Intro.prototype.text = '';

    return Intro;

  })(this.Maslosoft.Binder.Model);

  this.Maslosoft.Koe.FileSizeFormatter = (function(superClass) {
    extend(FileSizeFormatter, superClass);

    function FileSizeFormatter() {
      return FileSizeFormatter.__super__.constructor.apply(this, arguments);
    }

    FileSizeFormatter.prototype._class = "Maslosoft.Koe.FileSizeFormatter";

    FileSizeFormatter.prototype.size = 0;

    return FileSizeFormatter;

  })(this.Maslosoft.Binder.Model);

  this.Maslosoft.Koe.DecimalFormatter = (function(superClass) {
    extend(DecimalFormatter, superClass);

    function DecimalFormatter() {
      return DecimalFormatter.__super__.constructor.apply(this, arguments);
    }

    DecimalFormatter.prototype._class = "Maslosoft.Koe.DecimalFormatter";

    DecimalFormatter.prototype.value = 0;

    return DecimalFormatter;

  })(this.Maslosoft.Binder.Model);

  this.Maslosoft.Koe.Href = (function(superClass) {
    extend(Href, superClass);

    function Href() {
      return Href.__super__.constructor.apply(this, arguments);
    }

    Href.prototype._class = "Maslosoft.Koe.Href";

    Href.prototype.filename = '';

    return Href;

  })(this.Maslosoft.Binder.Model);

  this.Maslosoft.Koe.Src = (function(superClass) {
    extend(Src, superClass);

    function Src() {
      return Src.__super__.constructor.apply(this, arguments);
    }

    Src.prototype._class = "Maslosoft.Koe.Src";

    Src.prototype.filename = '';

    return Src;

  })(this.Maslosoft.Binder.Model);

  this.Maslosoft.Koe.HtmlValue = (function(superClass) {
    extend(HtmlValue, superClass);

    function HtmlValue() {
      return HtmlValue.__super__.constructor.apply(this, arguments);
    }

    HtmlValue.prototype._class = "Maslosoft.Koe.HtmlValue";

    HtmlValue.prototype.text = '';

    return HtmlValue;

  })(this.Maslosoft.Binder.Model);

  this.Maslosoft.Koe.TextValue = (function(superClass) {
    extend(TextValue, superClass);

    function TextValue() {
      return TextValue.__super__.constructor.apply(this, arguments);
    }

    TextValue.prototype._class = "Maslosoft.Koe.TextValue";

    TextValue.prototype.text = '';

    return TextValue;

  })(this.Maslosoft.Binder.Model);

  this.Maslosoft.Koe.SortableHtmlValues = (function(superClass) {
    extend(SortableHtmlValues, superClass);

    function SortableHtmlValues() {
      return SortableHtmlValues.__super__.constructor.apply(this, arguments);
    }

    SortableHtmlValues.prototype._class = "Maslosoft.Koe.SortableHtmlValues";

    SortableHtmlValues.prototype.title = '';

    SortableHtmlValues.prototype.items = [];

    return SortableHtmlValues;

  })(this.Maslosoft.Binder.Model);

  this.Maslosoft.Koe.Selected = (function(superClass) {
    extend(Selected, superClass);

    function Selected() {
      return Selected.__super__.constructor.apply(this, arguments);
    }

    Selected.prototype._class = "Maslosoft.Koe.Selected";

    Selected.prototype.isSelected = false;

    return Selected;

  })(this.Maslosoft.Binder.Model);

  this.Maslosoft.Koe.Enum = (function(superClass) {
    extend(Enum, superClass);

    function Enum() {
      return Enum.__super__.constructor.apply(this, arguments);
    }

    Enum.prototype._class = "Maslosoft.Koe.Enum";

    Enum.prototype.status = 0;

    return Enum;

  })(this.Maslosoft.Binder.Model);

  this.Maslosoft.Koe.Hidden = (function(superClass) {
    extend(Hidden, superClass);

    function Hidden() {
      return Hidden.__super__.constructor.apply(this, arguments);
    }

    Hidden.prototype._class = "Maslosoft.Koe.Hidden";

    Hidden.prototype.show = true;

    return Hidden;

  })(this.Maslosoft.Binder.Model);

  this.Maslosoft.Koe.Icon = (function(superClass) {
    extend(Icon, superClass);

    function Icon() {
      return Icon.__super__.constructor.apply(this, arguments);
    }

    Icon.prototype._class = "Maslosoft.Koe.Icon";

    Icon.prototype.icon = '';

    Icon.prototype.isImage = true;

    Icon.prototype.iconSize = 64;

    Icon.prototype.filename = '';

    Icon.prototype.updateDate = {
      sec: 21232323
    };

    return Icon;

  })(this.Maslosoft.Binder.Model);

  this.Maslosoft.Koe.Id = (function(superClass) {
    extend(Id, superClass);

    function Id() {
      return Id.__super__.constructor.apply(this, arguments);
    }

    Id.prototype._class = "Maslosoft.Koe.Id";

    Id.prototype.id = '';

    return Id;

  })(this.Maslosoft.Binder.Model);

  this.Maslosoft.Koe.Tooltip = (function(superClass) {
    extend(Tooltip, superClass);

    function Tooltip() {
      return Tooltip.__super__.constructor.apply(this, arguments);
    }

    Tooltip.prototype._class = "Maslosoft.Koe.Tooltip";

    Tooltip.prototype.title = '';

    return Tooltip;

  })(this.Maslosoft.Binder.Model);

  this.Maslosoft.Koe.Asset = (function(superClass) {
    extend(Asset, superClass);

    function Asset() {
      return Asset.__super__.constructor.apply(this, arguments);
    }

    Asset.prototype._class = "Maslosoft.Koe.Asset";

    Asset.prototype.url = '';

    Asset.prototype.updateDate = {
      sec: 21232323
    };

    return Asset;

  })(this.Maslosoft.Binder.Model);

  this.Maslosoft.Koe.DateTime = (function(superClass) {
    extend(DateTime, superClass);

    function DateTime() {
      return DateTime.__super__.constructor.apply(this, arguments);
    }

    DateTime.prototype._class = "Maslosoft.Koe.DateTime";

    DateTime.prototype.url = '';

    DateTime.prototype.date = 21232323;

    return DateTime;

  })(this.Maslosoft.Binder.Model);

  this.Maslosoft.Koe.Nested = (function(superClass) {
    extend(Nested, superClass);

    function Nested() {
      return Nested.__super__.constructor.apply(this, arguments);
    }

    Nested.prototype._class = "Maslosoft.Koe.Nested";

    Nested.prototype.rawI18N = '';

    return Nested;

  })(this.Maslosoft.Binder.Model);

  this.Maslosoft.Koe.Video = (function(superClass) {
    extend(Video, superClass);

    function Video() {
      return Video.__super__.constructor.apply(this, arguments);
    }

    Video.prototype._class = "Maslosoft.Koe.Video";

    Video.prototype.url = '';

    Video.prototype.title = '';

    return Video;

  })(this.Maslosoft.Binder.Model);

  this.Maslosoft.Koe.Videos = (function(superClass) {
    extend(Videos, superClass);

    function Videos() {
      return Videos.__super__.constructor.apply(this, arguments);
    }

    Videos.prototype._class = "Maslosoft.Koe.Video";

    Videos.prototype.videos = [];

    return Videos;

  })(this.Maslosoft.Binder.Model);

  this.Maslosoft.Koe.DatePicker = (function(superClass) {
    extend(DatePicker, superClass);

    function DatePicker() {
      return DatePicker.__super__.constructor.apply(this, arguments);
    }

    DatePicker.prototype._class = "Maslosoft.Koe.DatePicker";

    DatePicker.prototype.date = 1473839950;

    return DatePicker;

  })(this.Maslosoft.Binder.Model);

  this.Maslosoft.Koe.AclUser = (function(superClass) {
    extend(AclUser, superClass);

    function AclUser() {
      return AclUser.__super__.constructor.apply(this, arguments);
    }

    AclUser.prototype._class = "Maslosoft.Koe.AclUser";

    AclUser.prototype.isGuest = true;

    return AclUser;

  })(this.Maslosoft.Binder.Model);

  this.Maslosoft.Koe.Options = (function(superClass) {
    extend(Options, superClass);

    Options.prototype._class = "Maslosoft.Koe.Options";

    Options.prototype.selected = null;

    function Options(data) {
      if (data == null) {
        data = null;
      }
      Options.__super__.constructor.call(this, data);
    }

    return Options;

  })(this.Maslosoft.Binder.Model);

  this.Maslosoft.BinderDev.Widgets.MyWidget = (function() {
    var i, originalTitle;

    i = 0;

    originalTitle = '';

    MyWidget.prototype.title = '';

    function MyWidget() {
      this.log = bind(this.log, this);
      this.dispose = bind(this.dispose, this);
      this.init = bind(this.init, this);
      this.log("Create");
    }

    MyWidget.prototype.init = function(element) {
      if (!originalTitle) {
        originalTitle = this.title;
      }
      this.title = originalTitle + " #" + i;
      element.innerHTML = this.title;
      return this.log("Init");
    };

    MyWidget.prototype.dispose = function(element) {
      return this.log("Dispose");
    };

    MyWidget.prototype.log = function(message) {
      i++;
      return jQuery('#widgetLog').append("<div>" + i + ". " + message + "</div>");
    };

    return MyWidget;

  })();

  this.Maslosoft.Koe.Columns = (function(superClass) {
    extend(Columns, superClass);

    function Columns() {
      return Columns.__super__.constructor.apply(this, arguments);
    }

    Columns.prototype.columns = null;

    Columns.prototype.sizes = null;

    return Columns;

  })(this.Maslosoft.Binder.Model);

  this.Maslosoft.Koe.UiColumns = (function(superClass) {
    extend(UiColumns, superClass);

    function UiColumns() {
      return UiColumns.__super__.constructor.apply(this, arguments);
    }

    UiColumns.prototype.lg = 4;

    UiColumns.prototype.md = 4;

    UiColumns.prototype.sm = 2;

    UiColumns.prototype.xs = 2;

    return UiColumns;

  })(this.Maslosoft.Binder.Model);

  this.Maslosoft.BinderDev.Widgets.MyOtherWidget = (function() {
    var i, originalTitle;

    i = 0;

    originalTitle = '';

    MyOtherWidget.prototype.title = '';

    function MyOtherWidget() {
      this.log = bind(this.log, this);
      this.dispose = bind(this.dispose, this);
      this.init = bind(this.init, this);
      this.log("Create other");
    }

    MyOtherWidget.prototype.init = function(element) {
      if (!originalTitle) {
        originalTitle = this.title;
      }
      if (i > 1) {
        this.title = originalTitle + " #" + i;
      }
      element.innerHTML = this.title;
      return this.log("Init other");
    };

    MyOtherWidget.prototype.dispose = function(element) {
      return this.log("Dispose other");
    };

    MyOtherWidget.prototype.log = function(message) {
      i++;
      return jQuery('#widgetLog2').append("<div>" + i + ". " + message + "</div>");
    };

    return MyOtherWidget;

  })();

  this.Maslosoft.Koe.CssClasses = (function(superClass) {
    extend(CssClasses, superClass);

    function CssClasses() {
      return CssClasses.__super__.constructor.apply(this, arguments);
    }

    CssClasses.prototype._class = "Maslosoft.Koe.CssClasses";

    CssClasses.prototype.classes = [];

    CssClasses.prototype.classList = '';

    return CssClasses;

  })(this.Maslosoft.Binder.Model);

  this.Maslosoft.Koe.Smileys = (function() {
    function Smileys() {
      this.getElementValue = bind(this.getElementValue, this);
      this.getModelValue = bind(this.getModelValue, this);
    }

    Smileys.prototype.enabled = true;

    Smileys.smileys = {
      ':)': 'smiley.png',
      ':(': 'smiley-sad.png',
      '8)': 'smiley-cool.png'
    };

    Smileys.dir = '../src/images';

    Smileys.prototype.getModelValue = function(element, value) {
      var el, image, j, len, ref, ref1, selector, smiley, val;
      if (!this.enabled) {
        return value;
      }
      val = jQuery("<div>" + value + "</div>");
      ref = Smileys.smileys;
      for (smiley in ref) {
        image = ref[smiley];
        selector = "[data-smiley='" + smiley + "']";
        ref1 = val.find(selector);
        for (j = 0, len = ref1.length; j < len; j++) {
          el = ref1[j];
          jQuery(el).replaceWith(smiley);
        }
      }
      value = val.html();
      return value;
    };

    Smileys.prototype.getElementValue = function(element, value) {
      var image, re, ref, smiley;
      if (!this.enabled) {
        return value;
      }
      ref = Smileys.smileys;
      for (smiley in ref) {
        image = ref[smiley];
        re = new RegExp(Maslosoft.Ko.escapeRegExp(smiley), 'g');
        value = value.replace(re, "<img src='" + Smileys.dir + "/" + image + "' data-smiley='" + smiley + "'/>");
      }
      return value;
    };

    return Smileys;

  })();

  this.Maslosoft.Koe.Map = (function() {
    function Map() {}

    Map.prototype.lat = 0;

    Map.prototype.lng = 0;

    Map.prototype.zoom = 10;

    Map.prototype.type = 'roadmap';

    Map.prototype.markers = null;

    return Map;

  })();

}).call(this);
